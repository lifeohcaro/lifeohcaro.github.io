<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2018/06/06/%E5%AF%B9ODS%E7%9A%84%E8%AE%A4%E8%AF%86/"/>
      <url>/2018/06/06/%E5%AF%B9ODS%E7%9A%84%E8%AE%A4%E8%AF%86/</url>
      <content type="html"><![CDATA[<h1 id="对ODS的认识"><a href="#对ODS的认识" class="headerlink" title="对ODS的认识"></a>对ODS的认识</h1><p>标签（空格分隔）： 数据仓库</p><hr><p>##ODS( Operational Data Store)<br>&nbsp;&nbsp;&nbsp;&nbsp;ODS翻译成中文为操作数据存储，是数据仓库体系中的一个可选部分，ODS同时具有数据仓库的部分特征和OLTP系统的部分特征。</p><blockquote><p>是”面向主题的”、”集成的”、”当前或接近当前的”、”不断变化的”数据</p></blockquote><p>##作用<br>在一般在带有ODS的系统体系结构中，ODS都设计为如下几个作用：</p><p>##1. 在业务系统和数据仓库之间形成一个隔离层</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般较大的数据仓库系统都具有非常复杂的数据来源，这些数据存放在不同的地理位置、不同的数据库、不同的应用之中，从这些业务系统对数据进行抽取并不是一件容易的事。因此，ODS用于存放从业务系统直抽的数据，这些数据从数据结构、数据之间的逻辑关系上都与业务系统基本保持一致（一般会添加一个抽取日期），因此在抽取过程中极大降低了数据转化的复杂性，而主要关注数据抽取的接口、数据量大小、抽取方式等方面的问题。</p><p>##2. 转移一部分业务系统细节查询的功能<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在数据仓库建立之前，大量的报表、分析是由业务系统直接支持的，在一些比较复杂的报表生成过程中，对业务系统的运行产生相当大的压力。ODS的数据从粒度、组织方式等各个方面都保持了与业务系统的一致，那么原来由业务系统产生的报表、细节数据的查询自然能够从ODS中进行，从而降低业务系统的查询压力。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在一些客户量很小的城商行，监管报送所采用的表一般进过如下几步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 源系统数据</span><br><span class="line">e=&gt;end: 监管报表</span><br><span class="line">op1=&gt;operation: 加载贴源层</span><br><span class="line">op2=&gt;operation: 清洗、加工、主题汇总</span><br><span class="line">op3=&gt;operation: 主题的、接近当前的表</span><br><span class="line">op4=&gt;operation: 应用从ODS层抽取数据</span><br><span class="line">st-&gt;op1-&gt;op2-&gt;op3-&gt;op4-&gt;e</span><br></pre></td></tr></table></figure><p>##3. 完成数据仓库中不能完成的一些功能<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般来说，带有ODS的数据仓库体系结构中，DW层所存储的数据都是进行汇总过的数据，并不存储每笔交易产生的细节数据，但是在某些特殊的应用中，可能需要对交易细节数据进行查询，这时就需要把细节数据查询的功能转移到ODS来完成，而且ODS的数据模型按照面向主题的方式进行存储，可以方便地支持多维分析等查询功能。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在一个没有ODS层的数据仓库应用系统体系结构中，数据仓库中存储的数据粒度是根据需要而确定的，但一般来说，需要保留最细粒度的业务数据，实际上也就相当于ODS，但与ODS所不同的是，这时的细节数据不是<em>“当前、不断变化的”</em>数据，而是<em>“历史的，不再变化的”</em>数据。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过以往的工作经验得出一个结论：对数据量要求小的系统可以直接采用ODS，较大一些的数据仓库不需要ODS层，只需要将最细粒度的数据存放在数仓里。而针对来源复杂、数据量非常大的系统，可以采用ODS+DW的方式，前者专注于数据接口和数据量大小以及数据的清洗和转换、主题归类，而后者则专注于轻度汇总数据或最细粒度的历史存储。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>模型组的工作内容</title>
      <link href="/2018/05/28/%E6%A8%A1%E5%9E%8B%E7%BB%84%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9/"/>
      <url>/2018/05/28/%E6%A8%A1%E5%9E%8B%E7%BB%84%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9/</url>
      <content type="html"><![CDATA[<p>标签（空格分隔）： 工作</p><hr><p>&ensp;&ensp;&ensp;&ensp;因为部门人手紧缺的关系，被从平安项目组被抽调到兴业同业CRM项目组。刚入场时以为是做ETL工作，后经了解，原来是被安排到了模型组。不仅是我自己在问自己，别人也会问我，模型是什么，模型组的工作内容有哪些，接下来我会将自己两个半月以来的所见所想所悟写在下面。<br>&ensp;&ensp;&ensp;&ensp;这里的模型指的是为满足客户对数据查询和展现的要求，通过调研源系统，分析源系统表的数据状况，如</p><p>&ensp;&ensp;- <em>源表主键是什么</em><br>&ensp;&ensp;- <em>如何判断一笔有效的记录</em><br>&ensp;&ensp;- <em>属性字段从哪里取，哪个字段，关联哪张表</em><br>&ensp;&ensp;- <em>如何区分不同的业务类型</em></p><hr><p>&ensp;&ensp;&ensp;&ensp;上面这些只是在构建数据模型前的一些调研问题，针对不同的项目需求，其调研的问题也是大不相同的，但是万变不离其宗，最终目的都是将“精心”挑选的源系统、数据库表、表字段交给ETL开发人员进行加工。<br>&ensp;&ensp;&ensp;&ensp;从技术上将，模型组为ETL开发人员提供了现成可行的数据接口，ETL开发人员只要根据模型组经过调研和测试整理好的mapping文档对源系统数据文件进行抽取、清洗、加载步骤，就可以得到BI报表开发人员想要的数据，报表开发人员利用这些数据制作满足业务需求的报表。</p><p>#举一个不算形象的例子</p><table><thead><tr><th>业务人员</th><th>饭店顾客</th></tr></thead><tbody><tr><td>模型</td><td>食材采购</td></tr><tr><td>ETL组</td><td>掌勺大厨</td></tr><tr><td>报表</td><td>摆盘厨师</td></tr><tr><td>前端</td><td>服务人员</td></tr></tbody></table><blockquote><p>模型组的任务是根据顾客所点菜品去超市和农贸市场采购蔬菜肉类，在挑选过程中，采购人员要向摊主认真询问蔬菜肉类是否新鲜产地在哪里，是否是无公害，价格如何。除了询问摊主，还要考虑到菜品所需要的全部材料是否已购买齐全，还需要补充哪些。由于饭店厨师比较懒，在买菜的同时还要考虑做菜的工序，如什么时间热油，什么时间下锅，需要什么材料，食材切成什么样，又考虑到来饭店就餐人员量大，且每天客流不断，这就要给厨师提供一些建议，如何储存食材，储存多久，以什么形式储存。合理的采购不仅可以满足众多口味挑剔的顾客需求，也能为饭店节约成本，减轻厨师和服务人员的工作量。</p></blockquote><hr>]]></content>
      
      
    </entry>
    
    <entry>
      <title>解决没有标题的问题</title>
      <link href="/2018/05/27/MarkDown%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/05/27/MarkDown%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>#一级标题</p><p>##二级标题</p><p>###三级标题</p><p>####四级标题</p><ol><li>问题一</li></ol><ul><li>问题2<br>-插入链接<a href="链接"></a><br><a href="http://hlrshc.cn/" target="_blank" rel="noopener">我的网址</a><br>-在Markdown 中直接使用![]（图片）例：<br><img src="https://i.imgur.com/oeMvhMe.png" alt=""></li></ul><p>在我们写作的时候经常需要引用他人的文字，这个时候引用这个格式就很有必要了，在 Markdown 中，你只需要在你希望引用的文字前面加上 &gt; 就好了，例如：</p><blockquote><p>纸上得来终觉浅，绝知此事要躬行</p></blockquote><p>粗体和斜体<br>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。例如：</p><blockquote><p><em>一盏灯</em>， 一片昏黄；<strong>一简书</strong>， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。</p></blockquote><p>##代码引用<br>需要引用代码时，如果引用的语句只有一段，不分行，可以用 ` 将语句包起来。<br>如果引用的语句为多行，可以将<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">`hello world`</span><br></pre></td></tr></table></figure></p><p>第一段代码<br>第二段代码<br>第三段代码<br><code>`</code></p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><table><thead><tr><th>A</th><th style="text-align:center">B</th><th style="text-align:right">C</th></tr></thead><tbody><tr><td></td></tr></tbody></table><p>zhang   | zhen   |erhuo<br>$14       |$67     |$80</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>new-title问题</title>
      <link href="/2018/05/27/new-title%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/27/new-title%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<table><thead><tr><th>表头1</th><th style="text-align:left">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr></tbody></table>]]></content>
      
      
    </entry>
    
  
  
</search>
